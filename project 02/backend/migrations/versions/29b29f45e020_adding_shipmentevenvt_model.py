"""adding shipmentEvenvt model

Revision ID: 29b29f45e020
Revises: ddf5de1ffba1
Create Date: 2025-07-24 09:03:38.988327

"""

from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "29b29f45e020"
down_revision: Union[str, None] = "ddf5de1ffba1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

"""
Specifies the columnâ€™s data type as a PostgreSQL ENUM.
Details:
postgresql.ENUM: A SQLAlchemy type specific to PostgreSQL, 
used to create or reference an ENUM type in the database. 
An ENUM is a custom database type that restricts column values
to a predefined set (e.g., placed, in_transit, out_for_delivery, 
delivered from the ShipmentStatus Enum).
name="shipmentstatus": The name of the ENUM type in the PostgreSQL
database. This must match the name of an existing ENUM type or one
that will be created during migration.
create_type=False: Indicates that the ENUM type (shipmentstatus) 
should not be automatically created in the database by SQLAlchemy. 
This is typically set to False when using a migration tool like 
Alembic, which handles the creation of the ENUM type explicitly 
in the migration script. This avoids conflicts if the ENUM type 
already exists or is managed separately.
nullable=False:
Specifies that the status column cannot be NULL in the database.
This enforces that every row in the table must have a valid 
ShipmentStatus value, aligning with the status: ShipmentStatus
field in the SQLModel class, which is required (not optional).
"""


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "shipment_event",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("location", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(name="shipmentstatus", create_type=False),
            nullable=False,
        ),
        # sa.Column('status', sa.Enum('placed', 'in_transit', 'out_for_delivery', 'delivered', name='shipmentstatus'), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("shipment_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["shipment_id"],
            ["shipment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("seller", sa.Column("zip_code", sa.Integer(), nullable=True))
    op.alter_column(
        "shipment", "delivery_partner_id", existing_type=sa.UUID(), nullable=False
    )
    op.drop_column("shipment", "status")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "shipment",
        sa.Column(
            "status",
            postgresql.ENUM(
                "placed",
                "in_transit",
                "out_for_delivery",
                "delivered",
                name="shipmentstatus",
            ),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.alter_column(
        "shipment", "delivery_partner_id", existing_type=sa.UUID(), nullable=True
    )
    op.drop_column("seller", "zip_code")
    op.drop_table("shipment_event")
    # ### end Alembic commands ###
